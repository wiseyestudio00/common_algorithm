def preorder(node):
    if node is None:
        return

    print(node.val)
    preoder(node.left)
    preorder(node.right)


    # An iterative process to print preorder traversal of BT
  def iterativePreorder(root):

      # Base CAse
      if root is None:
          return

      # create an empty stack and push root to it
      nodeStack = []
      nodeStack.append(root)

      # Pop all items one by one. Do following for every popped item
      # a) print it
      # b) push its right child
      # c) push its left child
      # Note that right child is pushed first so that left
      # is processed first */
      while(len(nodeStack) > 0):

          # Pop the top item from stack and print it
          node = nodeStack.pop()
          print (node.data, end=" ")

          # Push right and left children of the popped node
          # to stack
          if node.right is not None:
              nodeStack.append(node.right)
          if node.left is not None:
              nodeStack.append(node.left)
